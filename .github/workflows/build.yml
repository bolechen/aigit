name: Build and Release aigit

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [darwin, windows]
        arch: [amd64, arm64]
        exclude:
          - os: windows
            arch: arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Build Binary
      env:
        GOOS: ${{ matrix.os }}
        GOARCH: ${{ matrix.arch }}
      run: |
        BINARY_NAME=aigit_${{ matrix.os }}_${{ matrix.arch }}
        if [ "${{ matrix.os }}" == "windows" ]; then
          BINARY_NAME+=".exe"
        fi
        go build -ldflags="-s -w" -o $BINARY_NAME main.go

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: aigit-${{ matrix.os }}-${{ matrix.arch }}
        path: aigit*

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download Artifacts
      uses: actions/download-artifact@v3

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          aigit-darwin-amd64/aigit_darwin_amd64
          aigit-darwin-arm64/aigit_darwin_arm64
          aigit-windows-amd64/aigit_windows_amd64.exe
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest 